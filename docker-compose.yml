services:
  backend:
    build:
      context: ./backend
      target: ${DEBUG_STAGE:-run}
    ports:
      - "127.0.0.1:${BACKEND_PORT}:${BACKEND_PORT}"
      - "127.0.0.1:5005:5005"
    environment:
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_URL=http://${FRONTEND_HOST}:${FRONTEND_PORT}
      - DEBUG_PORT=5005
    profiles:
      - core
      - integration-test
      - unit_test
    networks:
      - core-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend-test:
    depends_on:
      - backend
    build:
      context: ./backend
      target: test
    profiles:
      - unit_test

  frontend:
    build:
      context: ./frontend
      target: run
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend
    environment:
      - REACT_APP_BACKEND_URL=http://${BACKEND_HOST}:${BACKEND_PORT}
    profiles:
      - core
      - integration-test
      - unit_test
    networks:
      - core-network

  frontend-test:
    depends_on:
      - frontend
    build:
      context: ./frontend
      target: test
    profiles:
      - unit_test

  dummy-server:
    build:
      context: ./dummy_server
    ports:
      - "127.0.0.1:9000:9000" # WebSocket port
      - "127.0.0.1:9001:9001" # HTTP port
    profiles:
      - dummy-server
      - integration-test
    environment:
      - NODE_ENV=production
      - NORMAL_MODE=${NORMAL_MODE}
    networks:
      - core-network

  integration-test:
    build:
      context: ./integration_test
    depends_on:
      - dummy-server
      - backend
      - frontend
    profiles:
      - integration-test
    environment:
      - BACKEND_URL=http://${BACKEND_HOST}:${BACKEND_PORT}
      - FRONTEND_URL=http://${FRONTEND_HOST}:${FRONTEND_PORT}
    volumes:
      - ./integration_test:/app/integration_test
    networks:
      - core-network

networks:
  core-network:
    driver: bridge
